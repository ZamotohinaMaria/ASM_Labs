; —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å:
;   –≤—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è y
;   2 - 7) ùë¶ = 2^(ùëéùë•+ùëè)
%include "io64.inc"
%include "io64_float.inc"

extern scanf
CEXTERN printf
extern malloc

section .rodata
formatinnum: db "%f", 0

section .data
    
    two: dd 2.0
    a: dd __QNaN__
    b: dd __QNaN__
    x: dd __QNaN__
    y: dd __QNaN__

section .text
global CMAIN
CMAIN:
    mov rbp, rsp; for correct debugging
    fninit
    ;POLIZ: 2 a x *
    
    push rbx
    sub rsp, 32 ; —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏
    mov dword[rsp], 100
    
    ;input a
    mov rdi, 4 ; –∫–ª–∞–¥—ë–º –≤ rdi
    call malloc; –≤—ã–¥–µ–ª—è–µ–º –≤ rdi 4 –±–∏—Ç–∞
    
    mov rdi, formatinnum; –≤–≤–æ–¥ —à–∞–±–ª–æ–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ
    call scanf
    movss [a], xmm0; —Ç–∞–∫ –∫–∞–∫ —á–∏—Å–ª–æ –≤–µ—â–µ—Ç–≤–µ–Ω–Ω–æ–µ, –æ–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ xmm —Ä–µ–≥–∏—Å—Ç—Ä—ã
   
    xor rdi, rdi; –æ—á–∏—â–∞–µ–º, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–Ω–æ–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –ø–∞–º—è—Ç—å
    
    ;input b
    mov rdi, 4
    call malloc
    
    mov rdi, formatinnum
    call scanf
    movss [b], xmm0
    
    xor rdi, rdi
   
    ;input x
    mov rdi, 4 ; –∫–ª–∞–¥—ë–º —Ç—É–¥–∞ 16 –∏ –≥–æ–≤–æ—Ä–∏–º malloc'—É —Å–∫–æ–ª—å–∫–æ –±–∞–π—Ç –≤—ã–¥–µ–ª–∏—Ç—å
    call malloc
    
    mov rdi, formatinnum; –≤–≤–æ–¥ —à–∞–±–ª–æ–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ
    call scanf
    movss [x], xmm0
    
    fld dword[a]
    fld dword[x]
    fmul
    fld dword[b]
    fadd
    fld dword[two]
    
    FYL2X ;–≤—ã—á–∏—Å–ª—è–µ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å
    FLD1 ;–∑–∞–≥—Ä—É–∂–∞–µ–º +1.0 –≤ —Å—Ç–µ–∫
    FLD ST1 ;–¥—É–±–ª–∏—Ä—É–µ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —Å—Ç–µ–∫
    FPREM ;–ø–æ–ª—É—á–∞–µ–º –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç—å
    F2XM1 ;–≤–æ–∑–≤–æ–¥–∏–º –≤ –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç—å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è
    FADD;–ø—Ä–∏–±–∞–≤–ª—è–µ–º 1 –∏–∑ —Å—Ç–µ–∫–∞
    FSCALE;–≤–æ–∑–≤–æ–¥–∏–º –≤ —Ü–µ–ª—É—é —á–∞—Å—Ç—å –∏ —É–º–Ω–æ–∂–∞–µ–º
    FSTP ST1 ; –≤—ã—Ç–∞–ª–∫–∏–≤–∞–µ–º –ª–∏—à–Ω–µ–µ –∏–∑ –≤–µ—Ä—à–∏–Ω—ã
    
    fstp dword[y]
    
    movss xmm0, [y]
    mov  eax, 1
    ;mov rsi, [y]
    mov rdi, formatinnum ; –≤ rdi –∫–∏–¥–∞–µ–º —à–∞–±–ª–æ–Ω –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É
    call printf
    add rsp, 8
    xor eax, eax
    
    finit
    xor rax, rax
    ret